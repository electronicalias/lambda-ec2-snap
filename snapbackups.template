---
AWSTemplateFormatVersion: '2010-09-09'
Description: This stack will create a Lambda Function that will execute EBS Snapshots
  against any instance with a tag-value that matches the Product parameter.
Parameters:
  VpcIdentification:
    Description: VpcId used to create subnets
    Type: List<AWS::EC2::VPC::Id>
  BucketName:
    Description: The name of the bucket where the lambda code is stored
    Type: String
  S3Key:
    Description: The name of the S3 Key like "folder/file.zip"
    Type: String
  Product:
    Description: The name of the S3 Key like "folder/file.zip"
    Type: String
  DailyRetention:
    Description: The number of Daily Snapshots you will retain.
    Type: String
  WeeklyRetention:
    Description: The number of Weekly Snapshots you will retain.
    Type: String
  MonthlyRetention:
    Description: The number of Monthly Snapshots you will retain.
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Retention Settings
      Parameters:
      - Customer
      - DailyRetention
      - WeeklyRetention
      - MonthlyRetention
    - Label:
        default: Lambda Details
      Parameters:
      - BucketName
      - S3Key
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - ec2:Describe*
            Resource: "*"
          - Effect: Allow
            Action:
            - ec2:CreateSnapshot
            - ec2:CreateTags
            - ec2:DeleteSnapshot
            - ec2:ModifySnapshotAttribute
            - ec2:ResetSnapshotAttribute
            Resource: "*"
  DailySnapshotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: BucketName
        S3Key:
          Ref: S3Key
      Handler: createsnap.lambda_handler
      Runtime: python2.7
      Timeout: '20'
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
  WeeklySnapshotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: BucketName
        S3Key:
          Ref: S3Key
      Handler: createsnap.lambda_handler
      Runtime: python2.7
      Timeout: '20'
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
  MonthlySnapshotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: BucketName
        S3Key:
          Ref: S3Key
      Handler: createsnap.lambda_handler
      Runtime: python2.7
      Timeout: '20'
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
  SnapshotJanitorFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: BucketName
        S3Key:
          Ref: S3Key
      Handler: deletesnap.lambda_handler
      Runtime: python2.7
      Timeout: '20'
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
  DailySnapSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description:
        Fn::Join:
        - ''
        - - 'This is the daily snapshot taker for '
          - Ref: Product
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - DailySnapshotFunction
          - Arn
        Id: DailySnapshotFunctionV1
        Input:
          Fn::Join:
          - ''
          - - "{"
            - ' "Region": "'
            - Ref: AWS::Region
            - "\", "
            - ' "Product": "'
            - Ref: Product
            - "\", "
            - ' "Retention": "'
            - Ref: DailyRetention
            - "\", "
            - ' "Period": "Daily" '
            - "}"
  WeeklySnapSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description:
        Fn::Join:
        - ''
        - - 'This is the weekly snapshot taker for '
          - Ref: Product
      ScheduleExpression: rate(7 days)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - WeeklySnapshotFunction
          - Arn
        Id: WeeklySnapshotFunctionV1
        Input:
          Fn::Join:
          - ''
          - - "{"
            - ' "Region": "'
            - Ref: AWS::Region
            - "\", "
            - ' "Product": "'
            - Ref: Product
            - "\", "
            - ' "Retention": "'
            - Ref: WeeklyRetention
            - "\", "
            - ' "Period": "Weekly" '
            - "}"
  MonthlySnapSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description:
        Fn::Join:
        - ''
        - - 'This is the monthly snapshot taker for '
          - Ref: Product
      ScheduleExpression: rate(30 days)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - MonthlySnapshotFunction
          - Arn
        Id: MonthlySnapshotFunctionV1
        Input:
          Fn::Join:
          - ''
          - - "{"
            - ' "Region": "'
            - Ref: AWS::Region
            - "\", "
            - ' "Product": "'
            - Ref: Product
            - "\", "
            - ' "Retention": "'
            - Ref: MonthlyRetention
            - "\", "
            - ' "Period": "Monthly" '
            - "}"
  SnapshotJanitorSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description:
        Fn::Join:
        - ''
        - - 'This is the daily snapshot Janitor for '
          - Ref: Product
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - SnapshotJanitorFunction
          - Arn
        Id: SnapshotJanitorFunctionV1
        Input:
          Fn::Join:
          - ''
          - - "{"
            - ' "Region": "'
            - Ref: AWS::Region
            - "\", "
            - ' "Account": "'
            - Ref: AWS::AccountId
            - "\", "
            - ' "Product": "'
            - Ref: Product
            - "\" "
            - "}"
  DailyEventLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: DailySnapshotFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - DailySnapSchedule
        - Arn
  WeeklyEventLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: WeeklySnapshotFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - WeeklySnapSchedule
        - Arn
  MonthlyEventLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: MonthlySnapshotFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - MonthlySnapSchedule
        - Arn
  SnapshotJanitorLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: SnapshotJanitorFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - SnapshotJanitorSchedule
        - Arn
Outputs: {}
